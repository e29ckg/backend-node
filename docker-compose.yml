version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./nginx/custom.conf:/etc/nginx/conf.d/custom.conf
    restart: always

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=admin@yourdomain.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
    restart: always

  frontend:
    build:
      context: frontend
      dockerfile: ../dockerfile.frontend
    container_name: frontend
    environment:
      - VIRTUAL_HOST=yourdomain.com
      - LETSENCRYPT_HOST=yourdomain.com
      - LETSENCRYPT_EMAIL=admin@yourdomain.com
    restart: always

  backend:
    build:
      context: ./
      dockerfile: ./dockerfile.backend
    container_name: backend
    environment:
      - VIRTUAL_HOST=api.yourdomain.com
      - LETSENCRYPT_HOST=api.yourdomain.com
      - LETSENCRYPT_EMAIL=admin@yourdomain.com
    volumes:
      - ./uploads:/app/uploads
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: your_db_name
      MYSQL_USER: your_db_user
      MYSQL_PASSWORD: your_db_pass
    volumes:
      - db-data:/var/lib/mysql
    restart: always

volumes:
  db-data: